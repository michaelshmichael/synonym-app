[{"C:\\Users\\user\\word-associations\\src\\index.js":"1","C:\\Users\\user\\word-associations\\src\\reportWebVitals.js":"2","C:\\Users\\user\\word-associations\\src\\components\\Routes.js":"3","C:\\Users\\user\\word-associations\\src\\components\\Footer.js":"4","C:\\Users\\user\\word-associations\\src\\components\\Header.js":"5","C:\\Users\\user\\word-associations\\src\\components\\Registration.js":"6","C:\\Users\\user\\word-associations\\src\\components\\Login.js":"7","C:\\Users\\user\\word-associations\\src\\components\\Landing.js":"8","C:\\Users\\user\\word-associations\\src\\components\\Search.js":"9","C:\\Users\\user\\word-associations\\src\\components\\Profile.js":"10","C:\\Users\\user\\word-associations\\src\\components\\Vocab.js":"11","C:\\Users\\user\\word-associations\\src\\components\\Set.js":"12","C:\\Users\\user\\word-associations\\src\\api.js":"13","C:\\Users\\user\\word-associations\\src\\components\\Sidebar.js":"14","C:\\Users\\user\\word-associations\\src\\components\\ProfileData.js":"15","C:\\Users\\user\\word-associations\\src\\components\\VocabInfo.js":"16"},{"size":347,"mtime":1612791464852,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612791464853,"results":"19","hashOfConfig":"18"},{"size":2635,"mtime":1612952912293,"results":"20","hashOfConfig":"18"},{"size":764,"mtime":1612791464844,"results":"21","hashOfConfig":"18"},{"size":864,"mtime":1612791464845,"results":"22","hashOfConfig":"18"},{"size":6341,"mtime":1612791464849,"results":"23","hashOfConfig":"18"},{"size":2269,"mtime":1612791464847,"results":"24","hashOfConfig":"18"},{"size":897,"mtime":1612791464845,"results":"25","hashOfConfig":"18"},{"size":8155,"mtime":1612951291349,"results":"26","hashOfConfig":"18"},{"size":367,"mtime":1612791464848,"results":"27","hashOfConfig":"18"},{"size":5031,"mtime":1612962042034,"results":"28","hashOfConfig":"18"},{"size":6181,"mtime":1612962140764,"results":"29","hashOfConfig":"18"},{"size":514,"mtime":1612791464844,"results":"30","hashOfConfig":"18"},{"size":401,"mtime":1612791464850,"results":"31","hashOfConfig":"18"},{"size":6738,"mtime":1612879024431,"results":"32","hashOfConfig":"18"},{"size":3318,"mtime":1612962425642,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"16uwjsd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\word-associations\\src\\index.js",[],["68","69"],"C:\\Users\\user\\word-associations\\src\\reportWebVitals.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Routes.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Footer.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Header.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Registration.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Login.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Landing.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Search.js",["70","71"],"C:\\Users\\user\\word-associations\\src\\components\\Profile.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Vocab.js",["72","73"],"C:\\Users\\user\\word-associations\\src\\components\\Set.js",["74","75"],"C:\\Users\\user\\word-associations\\src\\api.js",[],"C:\\Users\\user\\word-associations\\src\\components\\Sidebar.js",[],"C:\\Users\\user\\word-associations\\src\\components\\ProfileData.js",["76","77"],"import { React, useEffect, useState } from 'react';\r\nimport {formatDistance} from 'date-fns';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport parseISO from 'date-fns/parseISO';\r\nimport axios from 'axios';\r\nimport unitedKingdom from '../svg/unitedKingdom.svg';\r\nimport russia from '../svg/russia.svg';\r\nimport portugal from '../svg/portugal.svg';\r\nimport italy from '../svg/italy.svg';\r\nimport france from '../svg/france.svg';\r\nimport germany from '../svg/germany.svg';\r\nimport spain from '../svg/spain.svg';\r\nimport APIEndpoints from '../api';\r\n\r\nexport default function ProfileData(props) {\r\n    const [activeUser, setActiveUser] = useState('');\r\n    const [uniqueId, setUniqueId] = useState('');\r\n    const [nativeLanguageFlag, setNativeLanguageFlag] = useState();\r\n    const [newLearningLanguage, setNewLearningLanguage] = useState('English');\r\n    const [userCreatedDate, setUserCreatedDate] = useState();\r\n\r\n    useEffect(() => {\r\n        async function getUserData () {\r\n            try {\r\n                const allUsers = await axios.get(APIEndpoints.userDataEndpoint, {withCredentials: true});\r\n                getActiveUser(allUsers);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getUserData();\r\n    },[]);\r\n\r\n    const displayFlag = (userData) => {\r\n        if(userData.nativeLanguage === 'Portuguese') {\r\n            setNativeLanguageFlag(portugal)\r\n        } else if (userData.nativeLanguage === 'French') {\r\n            setNativeLanguageFlag(france)\r\n        } else if (userData.nativeLanguage === 'Italian') {\r\n            setNativeLanguageFlag(italy) \r\n        } else if (userData.nativeLanguage === 'German') {\r\n            setNativeLanguageFlag(germany)\r\n        } else if (userData.nativeLanguage === 'Russian') {\r\n            setNativeLanguageFlag(russia)\r\n        } else if (userData.nativeLanguage === 'Spanish') {\r\n            setNativeLanguageFlag(spain)\r\n        } else if (userData.nativeLanguage === 'English') {\r\n            setNativeLanguageFlag(unitedKingdom)\r\n        }\r\n    };\r\n\r\n    const getActiveUser = (allUsers) => {\r\n        const currentActiveUser = allUsers.data.find(element => element.data.username === props.user);\r\n        let dateCreated = currentActiveUser.createdAt.slice(0,10);\r\n        setUserCreatedDate(dateCreated);\r\n        displayFlag(currentActiveUser.data);\r\n        setActiveUser(currentActiveUser);\r\n        console.log(currentActiveUser)\r\n        setUniqueId(currentActiveUser.uniqueId);\r\n    }\r\n\r\n    const addLanguage = () => {\r\n        if(activeUser.data.nativeLanguage === newLearningLanguage){\r\n            alert('You know this already')\r\n        } else if(!activeUser.data.learningLanguage.includes(newLearningLanguage)){\r\n            let updatedLanguages = [...activeUser.data.learningLanguage, newLearningLanguage]\r\n            setActiveUser((prevState) => {\r\n                const newState = Object.assign({}, prevState);\r\n                newState.data.learningLanguage = updatedLanguages;\r\n                return newState;\r\n            });\r\n        } else {\r\n            alert('Already Learning')\r\n        }\r\n    };\r\n\r\n    const deleteLanguage = (languageToDelete) => {\r\n        let updatedLanguages = activeUser.data.learningLanguage.filter(element => element !== languageToDelete)\r\n        if(window.confirm('Really Delete Language?')){\r\n            setActiveUser((prevState) => {\r\n                const newState = Object.assign({}, prevState);\r\n                newState.data.learningLanguage = updatedLanguages;\r\n                return newState;\r\n            });\r\n        };\r\n    }\r\n\r\n    // May want to change this function later to allow for ANY user changes\r\n    useEffect(() => {\r\n        if(uniqueId){\r\n            async function updateUserLanguage() {\r\n                console.log('LANGUAGE CHANGED')\r\n                console.log(activeUser)\r\n                try {\r\n                    const updatedUser = await axios.put(`https://app.yawe.dev/api/1/ce/non-auth-endpoint?key=b0188b53ea77419ba1d6dcda06e4bea9&uniqueId=${uniqueId}`, \r\n                    activeUser.data,\r\n                    { withCredentials: true },\r\n                    { headers: {'Content-Type': 'application/json'}}\r\n                    )\r\n                    console.log('UPDATED USER')\r\n                    console.log(updatedUser.data)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            updateUserLanguage();\r\n        };\r\n    }, [activeUser])\r\n\r\n    if(!activeUser) {\r\n        return(\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className='profile-data'>\r\n                <div className='username-and-flag-container'>\r\n                    <h1 className='profile-name'>{activeUser.data.username}</h1>\r\n                    <img className='native-language-flag' src={nativeLanguageFlag} alt='flag-showing-native-language'></img>\r\n                    <p className='member-for'> Member for {formatDistance(parseISO(userCreatedDate), new Date())}</p>\r\n                </div>\r\n                \r\n                <div className='learning-languages-container'>\r\n                    <h1>Languages Being Studied</h1>\r\n                    {activeUser.data.learningLanguage.map((language) => (\r\n                        <div className='learning-languages-individual'>\r\n                        <h2>{language}</h2>\r\n                        <FaTrashAlt className='learning-languages-individual-button'\r\n                        onClick={e => deleteLanguage(language)}\r\n                        >Delete</FaTrashAlt>\r\n                        </div>\r\n                    ))}\r\n                    \r\n                </div>\r\n                <div className='another-language-div'>\r\n                        <h3>Another Language?</h3>\r\n                        <div className='another-language-select'>\r\n                        <select onChange={e => setNewLearningLanguage(e.currentTarget.value)} \r\n                        id=\"learningLanguage\" \r\n                        name=\"learningLanguage\"\r\n                        placeholder=\"Another Language?\">\r\n                            <option value=\"English\">English</option>\r\n                            <option value=\"Russian\">Russian</option>\r\n                            <option value=\"Portuguese\">Portuguese</option>\r\n                            <option value=\"Spanish\">Spanish</option>\r\n                        </select>\r\n                        <button onClick={addLanguage} className='uibutton'>Add</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n","C:\\Users\\user\\word-associations\\src\\components\\VocabInfo.js",["78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":54,"column":7,"nodeType":"87","endLine":54,"endColumn":9,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":145,"column":8,"nodeType":"87","endLine":145,"endColumn":20,"suggestions":"90"},{"ruleId":"85","severity":1,"message":"86","line":27,"column":7,"nodeType":"87","endLine":27,"endColumn":9,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"89","line":92,"column":8,"nodeType":"87","endLine":92,"endColumn":20,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"86","line":32,"column":7,"nodeType":"87","endLine":32,"endColumn":9,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"89","line":96,"column":8,"nodeType":"87","endLine":96,"endColumn":20,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"86","line":32,"column":7,"nodeType":"87","endLine":32,"endColumn":9,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"89","line":108,"column":8,"nodeType":"87","endLine":108,"endColumn":20,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":10,"column":12,"nodeType":"99","messageId":"100","endLine":10,"endColumn":20},{"ruleId":"85","severity":1,"message":"101","line":22,"column":7,"nodeType":"87","endLine":22,"endColumn":19,"suggestions":"102"},{"ruleId":"85","severity":1,"message":"86","line":34,"column":7,"nodeType":"87","endLine":34,"endColumn":9,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'uniqueId'. Either include it or remove the dependency array.",["107"],["108"],["109"],["110"],["111"],["112"],["113"],"no-unused-vars","'uniqueId' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'client' and 'vocabItem'. Either include them or remove the dependency array.",["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"116","fix":"120"},{"desc":"118","fix":"121"},{"desc":"116","fix":"122"},{"desc":"118","fix":"123"},{"desc":"116","fix":"124"},{"desc":"118","fix":"125"},{"desc":"126","fix":"127"},{"desc":"116","fix":"128"},"Update the dependencies array to be: [getActiveUser]",{"range":"129","text":"130"},"Update the dependencies array to be: [activeUser, uniqueId]",{"range":"131","text":"132"},{"range":"133","text":"130"},{"range":"134","text":"132"},{"range":"135","text":"130"},{"range":"136","text":"132"},{"range":"137","text":"130"},{"range":"138","text":"132"},"Update the dependencies array to be: [activeUser, client, vocabItem]",{"range":"139","text":"140"},{"range":"141","text":"130"},[2091,2093],"[getActiveUser]",[5496,5508],"[activeUser, uniqueId]",[1038,1040],[3382,3394],[1171,1173],[3564,3576],[1277,1279],[4518,4530],[819,831],"[activeUser, client, vocabItem]",[1195,1197]]